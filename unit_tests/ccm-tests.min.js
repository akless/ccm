ccm.files["ccm-tests.js"]={setup:function(suite,callback){suite.ccm.clear();suite.$=suite.ccm.helper;callback()},load:{html:{setup:function(suite,callback){suite.expected_html_result="<span>Hello, <b>World</b>!</span><br>\n<i>This is only a test file.</i>";callback()},tests:{remoteViaJsFile:function(suite){suite.ccm.load("https://akless.github.io/ccm/unit_tests/dummy/dummy_html.js",function(result){suite.assertSame(suite.expected_html_result,result)})}}},css:{tests:{remote:function(suite){suite.ccm.load("https://akless.github.io/ccm/unit_tests/dummy/dummy.css",function(result){suite.assertSame("https://akless.github.io/ccm/unit_tests/dummy/dummy.css",result)})},cached:function(suite){suite.ccm.load("https://akless.github.io/ccm/unit_tests/dummy/dummy.css",function(){var local_cached_return_value=suite.ccm.load("https://akless.github.io/ccm/unit_tests/dummy/dummy.css");suite.assertSame("https://akless.github.io/ccm/unit_tests/dummy/dummy.css",local_cached_return_value)})}}},image:{tests:{remote:function(suite){suite.ccm.load("https://kaul.inf.h-brs.de/ccm/img/config.png",function(result){suite.assertSame("https://kaul.inf.h-brs.de/ccm/img/config.png",result)})},cached:function(suite){suite.ccm.load("https://kaul.inf.h-brs.de/ccm/img/config.png",function(){var local_cached_return_value=suite.ccm.load("https://kaul.inf.h-brs.de/ccm/img/config.png");suite.assertSame("https://kaul.inf.h-brs.de/ccm/img/config.png",local_cached_return_value)})}}},js:{tests:{remote:function(suite){suite.ccm.load("https://kaul.inf.h-brs.de/ccm/lib/jquery.js",function(result){suite.assertSame("https://kaul.inf.h-brs.de/ccm/lib/jquery.js",result)})},cached:function(suite){suite.ccm.load("https://kaul.inf.h-brs.de/ccm/lib/jquery.js",function(){var local_cached_return_value=suite.ccm.load("https://kaul.inf.h-brs.de/ccm/lib/jquery.js");suite.assertSame("https://kaul.inf.h-brs.de/ccm/lib/jquery.js",local_cached_return_value)})},executed:function(suite){delete window.jQuery;suite.ccm.load("https://kaul.inf.h-brs.de/ccm/lib/jquery.js",function(){suite.assertTrue(window.jQuery);delete window.jQuery})}}}},store:{create:{tests:{localReturn:function(suite){suite.assertTrue(suite.ccm.helper.isDatastore(suite.ccm.store()))},localCallback:function(suite){suite.ccm.store(function(store){suite.assertTrue(suite.ccm.helper.isDatastore(store))})},noClientReturn:function(suite){suite.assertFalse(suite.ccm.helper.isDatastore(suite.ccm.store({store:"test"})))},clientCallback:function(suite){suite.ccm.store({store:"test"},function(store){suite.assertTrue(suite.ccm.helper.isDatastore(store))})},serverReturn:function(suite){suite.assertTrue(suite.ccm.helper.isDatastore(suite.ccm.store({url:"https://ccm.inf.h-brs.de",store:"test"})))},noServerRealtimeReturn:function(suite){suite.assertFalse(suite.ccm.helper.isDatastore(suite.ccm.store({url:"wss://ccm.inf.h-brs.de",store:"test"})))},serverCallback:function(suite){suite.ccm.store({url:"https://ccm.inf.h-brs.de",store:"test"},function(store){suite.assertTrue(suite.ccm.helper.isDatastore(store))})}}},get:{local:{setup:function(suite,callback){suite.store=suite.ccm.store();callback()},tests:{exists:function(suite){var dataset={key:"existing_key"};suite.store.set(dataset);suite.assertEquals(dataset,suite.store.get("existing_key"))},notExists:function(suite){suite.assertEquals(null,suite.store.get("not_existing_key"))},query:function(suite){var foo={key:"foo",value:127,exists:false};var bar={key:"bar",value:4711,exists:true};var baz={key:"baz",value:127,exists:true};var abc={key:"abc",value:4711,exists:false};var xyz={key:"xyz",value:4711,exists:true};suite.store.set(foo);suite.store.set(bar);suite.store.set(baz);suite.store.set(abc);suite.store.set(xyz);suite.assertEquals([bar,xyz],suite.store.get({value:4711,exists:true}))},all:function(suite){var datasets=[{key:"foo"},{key:"bar"},{key:"baz"}];suite.store.set(datasets[0]);suite.store.set(datasets[1]);suite.store.set(datasets[2]);suite.assertEquals(datasets,suite.store.get())},allEmpty:function(suite){suite.assertEquals([],suite.store.get())}}}}},helper:{arrToObj:{tests:{arr:function(suite){suite.assertEquals({foo:true,bar:true},suite.ccm.helper.arrToObj(["foo","bar"]))},objKey:function(suite){var obj={arr:["foo","bar"]};suite.ccm.helper.arrToObj(obj,"arr");suite.assertEquals({foo:true,bar:true},obj.arr)}}},cleanObject:{tests:{example:function(suite){suite.assertEquals({foo:"bar"},suite.ccm.helper.cleanObject({foo:"bar",is:false,i:0,n:NaN,ref:null,text:"",value:undefined}))}}},convertObjectKeys:{tests:{example:function(suite){suite.assertEquals({test:123,foo:{bar:"abc",baz:"xyz"}},suite.ccm.helper.convertObjectKeys({test:123,"foo.bar":"abc","foo.baz":"xyz"}))}}},deepValue:{tests:{get:function(suite){var obj={test:123,foo:{bar:"abc",baz:"xyz"}};suite.assertSame("abc",suite.ccm.helper.deepValue(obj,"foo.bar"))},setObject:function(suite){var obj={};suite.ccm.helper.deepValue(obj,"foo.bar","abc");suite.assertEquals({foo:{bar:"abc"}},obj)},setReturn:function(suite){var obj={};suite.assertSame("abc",suite.ccm.helper.deepValue(obj,"foo.bar","abc"))}}},format:{tests:{obj:function(suite){var func=function(){};suite.assertEquals({is:true,abc:{xyz:{foo:"Hello, World!",ping:"pong",f1:func},n:12,bar:4711,f2:func},baz:true,a:"x",b:true,c:3,d:"Hello, World!",e:4711,f:true,func:function(){},f3:func},suite.ccm.helper.format({is:"%%",abc:{xyz:{foo:"%text%",ping:"%%",f1:"%func%"},n:"%%",bar:"%number%",f2:"%func%"},baz:"%bool%",a:"x",b:true,c:3,d:"%text%",e:"%number%",f:"%bool%",func:function(){},f3:"%func%"},true,"pong",{text:"Hello, World!",number:4711,bool:true,func:func},12))},string:function(suite){suite.assertEquals("true, Hello, World!, pong, 12, 4711, true",suite.ccm.helper.format("%%, %text%, %%, %%, %number%, %bool%",true,"pong",{text:"Hello, World!",number:4711,bool:true},12))},func:function(suite){var func=function(){};if(func!==suite.ccm.helper.format(func))return suite.failed();if(func!==suite.ccm.helper.format({x:func}).x)return suite.failed();if(func!==suite.ccm.helper.format({x:{y:func}}).x.y)return suite.failed();var result;result=suite.ccm.helper.format({f1:"%func%",f2:"%func%",f3:"%func%"},{func:func});if(func!==result.f1||func!==result.f2||func!==result.f3)return suite.failed();result=suite.ccm.helper.format({f1:"%%",f2:"%%",f3:"%%"},func,func,func);if(func!==result.f1||func!==result.f2||func!==result.f3)return suite.failed();suite.passed()}}},formData:{input:{tests:{color:suite=>{suite.assertEquals({x:"#66ccff"},suite.$.formData(suite.$.html({inner:{tag:"input",type:"color",name:"x",value:"#66ccff"}})))},date:suite=>{suite.assertEquals({x:"2017-11-19"},suite.$.formData(suite.$.html({inner:{tag:"input",type:"date",name:"x",value:"2017-11-19"}})))},"datetime-local":suite=>{suite.assertEquals({x:"2017-11-19T09:55"},suite.$.formData(suite.$.html({inner:{tag:"input",type:"datetime-local",name:"x",value:"2017-11-19T09:55"}})))},email:suite=>{suite.assertEquals({x:"john.doe@web.de"},suite.$.formData(suite.$.html({inner:{tag:"input",type:"email",name:"x",value:"john.doe@web.de"}})))},hidden:suite=>{suite.assertEquals({x:"secret"},suite.$.formData(suite.$.html({inner:{tag:"input",type:"hidden",name:"x",value:"secret"}})))},month:suite=>{suite.assertEquals({x:"2017-11"},suite.$.formData(suite.$.html({inner:{tag:"input",type:"month",name:"x",value:"2017-11"}})))},password:suite=>{suite.assertEquals({x:"xxx"},suite.$.formData(suite.$.html({inner:{tag:"input",type:"password",name:"x",value:"xxx"}})))},search:suite=>{suite.assertEquals({x:"found!"},suite.$.formData(suite.$.html({inner:{tag:"input",type:"search",name:"x",value:"found!"}})))},tel:suite=>{suite.assertEquals({x:"0123456789"},suite.$.formData(suite.$.html({inner:{tag:"input",type:"tel",name:"x",value:"0123456789"}})))},text:suite=>{suite.assertEquals({x:"John Doe"},suite.$.formData(suite.$.html({inner:{tag:"input",type:"text",name:"x",value:"John Doe"}})))},time:suite=>{suite.assertEquals({x:"12:55"},suite.$.formData(suite.$.html({inner:{tag:"input",type:"time",name:"x",value:"12:55"}})))},url:suite=>{suite.assertEquals({x:"https://www.john-doe.de"},suite.$.formData(suite.$.html({inner:{tag:"input",type:"url",name:"x",value:"https://www.john-doe.de"}})))},week:suite=>{suite.assertEquals({x:"2017-W46"},suite.$.formData(suite.$.html({inner:{tag:"input",type:"week",name:"x",value:"2017-W46"}})))}}},number:{tests:{validNumber:suite=>{suite.assertEquals({x:3},suite.$.formData(suite.$.html({inner:{tag:"input",type:"number",name:"x",value:3}})))},invalidNumber:suite=>{suite.assertEquals({x:""},suite.$.formData(suite.$.html({inner:{tag:"input",type:"number",name:"x",value:"foo"}})))},noNumber:suite=>{suite.assertEquals({x:""},suite.$.formData(suite.$.html({inner:{tag:"input",type:"number",name:"x"}})))},range:suite=>{suite.assertEquals({x:5},suite.$.formData(suite.$.html({inner:{tag:"input",type:"range",name:"x",min:1,max:12,value:5}})))}}},checkbox:{tests:{singleTrue:suite=>{suite.assertEquals({x:true},suite.$.formData(suite.$.html({inner:{tag:"input",type:"checkbox",name:"x",checked:true}})))},singleFalse:suite=>{suite.assertEquals({x:false},suite.$.formData(suite.$.html({inner:{tag:"input",type:"checkbox",name:"x"}})))},singleValueTrue:suite=>{suite.assertEquals({x:"foo"},suite.$.formData(suite.$.html({inner:{tag:"input",type:"checkbox",name:"x",value:"foo",checked:true}})))},singleValueFalse:suite=>{suite.assertEquals({x:""},suite.$.formData(suite.$.html({inner:{tag:"input",type:"checkbox",name:"x",value:"foo"}})))},multiZero:suite=>{suite.assertEquals({x:["",""]},suite.$.formData(suite.$.html({inner:[{tag:"input",type:"checkbox",name:"x",value:"foo"},{tag:"input",type:"checkbox",name:"x",value:"bar"}]})))},multiSubset:suite=>{suite.assertEquals({x:["","bar"]},suite.$.formData(suite.$.html({inner:[{tag:"input",type:"checkbox",name:"x",value:"foo"},{tag:"input",type:"checkbox",name:"x",value:"bar",checked:true}]})))},multiMany:suite=>{suite.assertEquals({x:["foo","bar"]},suite.$.formData(suite.$.html({inner:[{tag:"input",type:"checkbox",name:"x",value:"foo",checked:true},{tag:"input",type:"checkbox",name:"x",value:"bar",checked:true}]})))},singleMultiMix:suite=>{suite.assertEquals({x:["foo","bar",""],y:true,z:false},suite.$.formData(suite.$.html({inner:[{tag:"input",type:"checkbox",name:"x",value:"foo",checked:true},{tag:"input",type:"checkbox",name:"x",value:"bar",checked:true},{tag:"input",type:"checkbox",name:"x",value:"baz"},{tag:"input",type:"checkbox",name:"y",checked:true},{tag:"input",type:"checkbox",name:"z"}]})))}}},radio:{tests:{zero:suite=>{suite.assertEquals({x:""},suite.$.formData(suite.$.html({inner:[{tag:"input",type:"radio",name:"x",value:"foo"},{tag:"input",type:"radio",name:"x",value:"bar"}]})))},one:suite=>{suite.assertEquals({x:"bar"},suite.$.formData(suite.$.html({inner:[{tag:"input",type:"radio",name:"x",value:"foo"},{tag:"input",type:"radio",name:"x",value:"bar",checked:true}]})))}}},select:{tests:{singleZero:suite=>{suite.assertEquals({x:"foo"},suite.$.formData(suite.$.html({inner:{tag:"select",name:"x",inner:[{tag:"option",value:"foo"},{tag:"option",value:"bar"}]}})))},singleOne:suite=>{suite.assertEquals({x:"bar"},suite.$.formData(suite.$.html({inner:{tag:"select",name:"x",inner:[{tag:"option",value:"foo"},{tag:"option",value:"bar",selected:true}]}})))},singleMany:suite=>{suite.assertEquals({x:"bar"},suite.$.formData(suite.$.html({inner:{tag:"select",name:"x",inner:[{tag:"option",value:"foo",selected:true},{tag:"option",value:"bar",selected:true}]}})))},selectMultiZero:suite=>{suite.assertEquals({x:""},suite.$.formData(suite.$.html({inner:{tag:"select",name:"x",multiple:true,inner:[{tag:"option",value:"foo"},{tag:"option",value:"bar"}]}})))},selectMultiOne:suite=>{suite.assertEquals({x:"bar"},suite.$.formData(suite.$.html({inner:{tag:"select",name:"x",multiple:true,inner:[{tag:"option",value:"foo"},{tag:"option",value:"bar",selected:true}]}})))},selectMultiMany:suite=>{suite.assertEquals({x:["foo","bar"]},suite.$.formData(suite.$.html({inner:{tag:"select",name:"x",multiple:true,inner:[{tag:"option",value:"foo",selected:true},{tag:"option",value:"bar",selected:true}]}})))}}},tests:{textarea:suite=>{suite.assertEquals({x:"story"},suite.$.formData(suite.$.html({inner:{tag:"textarea",name:"x",inner:"story"}})))},objectValue:suite=>{suite.assertEquals({x:{foo:"bar"}},suite.$.formData(suite.$.html({inner:{tag:"input",type:"text",name:"x",value:"{'foo':'bar'}"}})))},arrayValue:suite=>{suite.assertEquals({x:["foo","bar"]},suite.$.formData(suite.$.html({inner:{tag:"input",type:"text",name:"x",value:"['foo','bar']"}})))},dotNotation:suite=>{suite.assertEquals({foo:{bar:"baz"}},suite.$.formData(suite.$.html({inner:{tag:"input",type:"text",name:"foo.bar",value:"baz"}})))}}},isProxy:{tests:{pseudoProxy:function(suite){var value={component:"ccm.blank.js"};suite.assertTrue(suite.ccm.helper.isProxy(value))},noProxy:function(suite){if(suite.ccm.helper.isProxy(true))return suite.failed("boolean can't be a ccm proxy instance.");if(suite.ccm.helper.isProxy(1))return suite.failed("number can't be a ccm proxy instance.");if(suite.ccm.helper.isProxy(false))return suite.failed("falsy value can't be a ccm proxy instance.");if(suite.ccm.helper.isProxy(null))return suite.failed("falsy value can't be a ccm proxy instance.");if(suite.ccm.helper.isProxy(undefined))return suite.failed("falsy value can't be a ccm proxy instance.");if(suite.ccm.helper.isProxy(0))return suite.failed("falsy value can't be a ccm proxy instance.");if(suite.ccm.helper.isProxy(""))return suite.failed("falsy value can't be a ccm proxy instance.");if(suite.ccm.helper.isProxy([]))return suite.failed("array can't be a ccm proxy instance.");if(suite.ccm.helper.isProxy({}))return suite.failed("empty object can't be a ccm proxy instance.");if(suite.ccm.helper.isProxy({component:{}}))return suite.failed("object with object in component property can't be a ccm proxy instance.");if(suite.ccm.helper.isProxy({component:""}))return suite.failed("object with empty string in component property can't be a ccm proxy instance.");suite.passed()}}},isSubset:{setup:function(suite,callback){suite.other={name:"John Doe",counter:3,isValid:true,values:["abc",123,false],settings:{title:"Welcome!",year:2017,greedy:true},onLoad:function(){console.log("Loading..")}};callback()},tests:{correctUpperSubset:function(suite){suite.assertTrue(suite.ccm.helper.isSubset({name:"John Doe",counter:3,isValid:true},suite.other))},correctLowerSubset:function(suite){suite.assertTrue(suite.ccm.helper.isSubset({values:["abc",123,false],settings:{title:"Welcome!",year:2017,greedy:true},onLoad:suite.other.onLoad},suite.other))},correctSingleProperties:function(suite){if(!suite.ccm.helper.isSubset({name:"John Doe"},suite.other))return suite.failed("correct string property must be match");if(!suite.ccm.helper.isSubset({counter:3},suite.other))return suite.failed("correct number property must be match");if(!suite.ccm.helper.isSubset({isValid:true},suite.other))return suite.failed("correct boolean property must be match");if(!suite.ccm.helper.isSubset({values:["abc",123,false]},suite.other))return suite.failed("correct array property must be match");if(!suite.ccm.helper.isSubset({settings:{title:"Welcome!",year:2017,greedy:true}},suite.other))return suite.failed("correct object property must be match");if(!suite.ccm.helper.isSubset({onLoad:suite.other.onLoad},suite.other))return suite.failed("correct function property must be match");suite.passed()},incorrectSingleProperties:function(suite){if(suite.ccm.helper.isSubset({name:"Doe, John"},suite.other))return suite.failed("incorrect string property should not match");if(suite.ccm.helper.isSubset({counter:2},suite.other))return suite.failed("incorrect number property should not match");if(suite.ccm.helper.isSubset({isValid:false},suite.other))return suite.failed("incorrect boolean property should not match");if(suite.ccm.helper.isSubset({values:["xyz",123,false]},suite.other))return suite.failed("incorrect array property should not match");if(suite.ccm.helper.isSubset({settings:{title:"Hello, world.",year:2017,greedy:true}},suite.other))return suite.failed("incorrect object property should not match");if(suite.ccm.helper.isSubset({onLoad:function(){console.log("Loading..")}},suite.other))return suite.failed("incorrect function property should not match");suite.passed()}}},loading:{setup:function(suite,callback){suite.ccm.instance({name:"dummy",ccm:"../ccm.js",Instance:function(){}},function(instance){suite.dummy=instance;callback()})},tests:{keyframe:function(suite){suite.ccm.helper.loading(suite.dummy);suite.assertSame("@keyframes ccm_loading { to { transform: rotate(360deg); } }",suite.dummy.element.parentNode.querySelector("#ccm_keyframe").innerHTML)},icon:function(suite){suite.assertSame('<div class="ccm_loading"><div style="display: inline-block; width: 0.5em; height: 0.5em; border: 0.15em solid #009ee0; border-right-color: transparent; border-radius: 50%; animation: ccm_loading 1s linear infinite;"></div></div>',suite.ccm.helper.loading(suite.dummy).outerHTML)}}},makeIterable:{tests:{notIterableArguments:function(suite){suite.assertFalse(typeof arguments.map==="function")},iterableArguments:function(suite){suite.assertTrue(typeof suite.ccm.helper.makeIterable(arguments).map==="function")},notIterableElements:function(suite){if(suite.ccm.helper.isFirefox())suite.assertTrue(typeof document.head.children.map==="function");else suite.assertFalse(typeof document.head.children.map==="function")},iterableElements:function(suite){suite.assertTrue(typeof suite.ccm.helper.makeIterable(document.head.children).map==="function")},notIterableAttributes:function(suite){suite.assertFalse(typeof document.head.attributes.map==="function")},iterableAttributes:function(suite){suite.assertTrue(typeof suite.ccm.helper.makeIterable(document.head.attributes).map==="function")}}},privatize:{tests:{someProperties:function(suite){suite.ccm.instance({name:"dummy1",ccm:"https://akless.github.io/ccm/ccm.js",config:{foo:"abc",bar:"xyz"},Instance:function(){var self=this;var my;this.ready=function(callback){my=suite.ccm.helper.privatize(self,"childNodes","component","bar","baz","id","index","init","ready","render");if(Object.keys(my).length!==1||my.bar!=="xyz")suite.failed("wrong privatized properties: "+JSON.stringify(my));callback()}}},function(instance){if(instance.foo!=="abc")suite.failed('no public property "foo" with value "abc"');suite.assertEquals(["foo","ccm","id","index","component","root","element","dependency"],Object.keys(instance))})},allProperties:function(suite){suite.ccm.instance({name:"dummy2",ccm:"https://akless.github.io/ccm/ccm.js",config:{foo:"abc",bar:"xyz"},Instance:function(){var self=this;var my;this.ready=function(callback){my=suite.ccm.helper.privatize(self);callback()}}},{baz:["ccm.instance","dummy2"]},function(instance){suite.assertEquals(["ccm","baz","id","index","component","root","element"],Object.keys(instance))})}}},regex:{tests:{validFilename:function(suite){suite.assertTrue(suite.ccm.helper.regex("filename").test("ccm.dummy-3.2.1.min.js"))},invalidFilename:function(suite){suite.assertFalse(suite.ccm.helper.regex("filename").test("dummy.js"))},validKey:function(suite){suite.assertTrue(suite.ccm.helper.regex("key").test("Dummy12_Foo3"))},invalidKey:function(suite){suite.assertFalse(suite.ccm.helper.regex("key").test("")||suite.ccm.helper.regex("key").test("$"))}}},solveDependency:{setup:function(suite,callback){suite.url="https://akless.github.io/ccm/unit_tests/dummy/dummy.css";suite.obj_key="dummy";callback()},tests:{callbackResult:function(suite){var obj={dummy:["ccm.load",suite.url]};suite.ccm.helper.solveDependency(obj,suite.obj_key,function(result){suite.assertSame(suite.url,result)})},noReturnResult:function(suite){var obj={dummy:["ccm.load",suite.url]};var result=suite.ccm.helper.solveDependency(obj,suite.obj_key);suite.assertFalse(result)},cachedReturnResult:function(suite){suite.ccm.load(suite.url,function(){var obj={dummy:["ccm.load",suite.url]};var result=suite.ccm.helper.solveDependency(obj,suite.obj_key);suite.assertSame(suite.url,result)})}}},toJSON:{tests:{example:function(suite){suite.assertEquals({ref:null,error:null,n:0,m:12,empty:"",str:"foo",obj_str:"bar",not:false,is:true,plain:{},_class:{},node:{},many:suite.ccm.helper.isFirefox()?[{}]:{0:{}}},suite.ccm.helper.toJSON({x:undefined,ref:null,error:NaN,n:0,m:12,empty:"",str:"foo",obj_str:new String("bar"),not:false,is:true,func:function(name){return"Hello, "+name},plain:{},_class:new Object,node:document.createElement("span"),many:document.head.querySelectorAll("meta")}))}}},wait:{tests:{oneSecond:function(suite){var time=(new Date).getTime();suite.ccm.helper.wait(500,function(){suite.assertSame(500,Math.floor(((new Date).getTime()-time)/10)*10)})}}}},subresource_integrity:{tests:{correctHashCSS:function(suite){suite.ccm.load({url:"https://akless.github.io/ccm/unit_tests/dummy/dummy.css",attr:{integrity:"sha384-HNXMzuxnB28OHU1JLVZfb4YpdyYG4Vso6Hde2TeK4ri6UolkaemI7vClL4SBbNyW",crossorigin:"anonymous"}},function(result){suite.assertSame("https://akless.github.io/ccm/unit_tests/dummy/dummy.css",result)})},wrongHashCSS:function(suite){var passed;suite.ccm.helper.wait(500,function(){if(!passed)suite.passed();passed=false});suite.ccm.load({url:"https://akless.github.io/ccm/unit_tests/dummy/dummy.css",attr:{integrity:"sha384-HNXMzuxnB28OHU1JLVZfb4YpdyYG4Vso6Hde2TeK4ri6UolkaemI7vClL4SBbNyX",crossorigin:"anonymous"}},function(result){if(suite.ccm.helper.isSafari()||suite.ccm.helper.isFirefox()){passed=true;suite.assertSame("https://akless.github.io/ccm/unit_tests/dummy/dummy.css",result);return}if(passed!==false)suite.failed("correct hash",result);passed=true})},correctHashJS:function(suite){suite.ccm.load({url:"https://akless.github.io/ccm/unit_tests/dummy/dummy.js",attr:{integrity:"sha384-TKnKV29u7ys0EBy1sBaTn8FNF2IixWLJ71F3+cSaPpzj6trbokB5Gsqm3jG5MTly",crossorigin:"anonymous"}},function(result){suite.assertSame("https://akless.github.io/ccm/unit_tests/dummy/dummy.js",result)})},wrongHashJS:function(suite){var passed;suite.ccm.helper.wait(500,function(){if(!passed)suite.passed();passed=false});suite.ccm.load({url:"https://akless.github.io/ccm/unit_tests/dummy/dummy.js",attr:{integrity:"sha384-TKnKV29u7ys0EBy1sBaTn8FNF2IixWLJ71F3+cSaPpzj6trbokB5Gsqm3jG5MTlz",crossorigin:"anonymous"}},function(result){if(suite.ccm.helper.isSafari()){passed=true;suite.assertSame("https://akless.github.io/ccm/unit_tests/dummy/dummy.js",result);return}if(passed!==false)suite.failed("correct hash",result);passed=true})}}}};